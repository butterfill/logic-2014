---cson
layout: 'deck_units'
title: "More Dead Horse"
description: "Continues the discussion of how to translate English sentences involving a combination of universal and existential quantifiers into awFOL with an example, 'There is a store for everything.'  Also discusses structural ambiguities related to quantifier scope and how to use awFOL to pin down this sort of ambiguity."
tags: ['quantification','semantics','translation']
depends: ['560']
source: ['ph126 lecture 13']
duration: 10
book: ['11.4','11.5']
exNormal:[
  '/ex/trans/domain/people/names/-/predicates/Sad1|Crying1/sentence/Everyone is crying'
  '/ex/trans/domain/people/names/a=Ayesha/predicates/Sad1|Crying1/sentence/Everyone except Ayesha is crying'
  '/ex/trans/domain/people/names/a=Ayesha/predicates/Behind2-x-is-behind-y/sentence/Everyone except Ayesha is behind Ayesha'
  '/ex/trans/domain/people/names/-/predicates/Behind2-x-is-behind-y/sentence/Someone is behind everyone else'
  '/ex/trans/domain/people/names/a=Ayesha/predicates/Loves2/sentence/all x (not a=x arrow Loves(x,a))'
  '/ex/trans/domain/people/names/-/predicates/Loves2/sentence/exists y all x (not y=x arrow Loves(x,y))'
  
  '/ex/counter/orValid/from/exists x all y StoreFor(x,y)/to/exists x StoreFor(x,x)'
  '/ex/proof/orInvalid/from/exists x all y StoreFor(x,y)/to/exists x StoreFor(x,x)'
  '/ex/proof/orInvalid/from/exists x all y (not x=y arrow StoreFor(x,y))/to/exists x StoreFor(x,x)'
  '/ex/counter/orValid/from/exists x all y (not x=y arrow StoreFor(x,y))/to/exists x StoreFor(x,x)'
  '/ex/proof/orInvalid/from/all y exists x Loves(x,y)/to/exists x all y Loves(x,y)'
  '/ex/counter/orValid/from/all y exists x Loves(x,y)/to/exists x all y Loves(x,y)'
]
exFast:[
  '/ex/trans/domain/people/names/-/predicates/Sad1|Crying1/sentence/Everyone is crying'
  '/ex/trans/domain/people/names/a=Ayesha/predicates/Sad1|Crying1/sentence/Everyone except Ayesha is crying'
  '/ex/trans/domain/people/names/a=Ayesha/predicates/Behind2-x-is-behind-y/sentence/Everyone except Ayesha is behind Ayesha'
  '/ex/trans/domain/people/names/-/predicates/Behind2-x-is-behind-y/sentence/Someone is behind everyone else'
  '/ex/trans/domain/people/names/a=Ayesha/predicates/Loves2/sentence/all x (not a=x arrow Loves(x,a))'
  '/ex/trans/domain/people/names/-/predicates/Loves2/sentence/exists y all x (not y=x arrow Loves(x,y))'
  
  '/ex/counter/orValid/from/exists x all y StoreFor(x,y)/to/exists x StoreFor(x,x)'
  '/ex/proof/orInvalid/from/exists x all y StoreFor(x,y)/to/exists x StoreFor(x,x)'
  '/ex/proof/orInvalid/from/exists x all y (not x=y arrow StoreFor(x,y))/to/exists x StoreFor(x,x)'
  '/ex/counter/orValid/from/exists x all y (not x=y arrow StoreFor(x,y))/to/exists x StoreFor(x,x)'
  '/ex/proof/orInvalid/from/all y exists x Loves(x,y)/to/exists x all y Loves(x,y)'
  '/ex/counter/orValid/from/all y exists x Loves(x,y)/to/exists x all y Loves(x,y)'
]

---



include ../../../fragments/unit_mixins

+slide({bkg:'unit_565/slide-097.jpeg'})
  .notes 
  .handout.img(data-src='img/unit_565_proof.png')
  .handout “Tesco is a store for everything”
  .handout \hspace{3mm}  ∀x StoreFor(b,x)

  .handout Tesco is a store for everything except dead horses
  .handout \hspace{3mm}  ∀x (¬DeadHorse(x) → StoreFor(b,x) )

  .handout Tesco is a store for everything except Tesco
  .handout \hspace{3mm}     ∀x (¬x=b → StoreFor(b,x) )
  
  .handout There is a store for everything except itself
  .handout \hspace{3mm}    ∃y ∀x (¬x=y → StoreFor(y,x) )
  


+slide({bkg:'unit_565/slide-098.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-099.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-100.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-101.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-102.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-103.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-104.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-105.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-106.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-107.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-108.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-109.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-110.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-111.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-112.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-113.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-114.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-115.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-116.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-117.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-118.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-119.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-120.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-121.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-122.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-123.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-124.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-125.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-126.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-127.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-128.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-129.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-130.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-131.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-132.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-133.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-134.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-135.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-136.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-137.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-138.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-139.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-140.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-141.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-142.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-143.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-144.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-145.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-146.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-147.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-148.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-149.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-150.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-151.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-152.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-153.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-154.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-155.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-156.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-157.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-158.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-159.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-160.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-161.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-162.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-163.jpeg'})
  .notes 

+slide({bkg:'unit_565/slide-164.jpeg'})
  .notes 

