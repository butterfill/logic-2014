---cson
layout: 'deck_units' 
title: "Expressing Relations with Quantifiers"
description: "Describes how quantifiers can be used to express the claim that a particular relation is reflexive, symmetric or transitive.  Also introduces dot-arrow diagrams to describe relations."
tags: ['quantification','relations']
depends: ['740','742']
source: ['ph126 fastlecture 05']
duration: 5
book: ['15.1', '15.6']
exercises: ['15.33--15.40 (second edition)']
exercises_fast: ['15.33, 15.37--15.39 (second edition)']
sequence: 760
exNormal : [
  
  '/ex/trans/domain/people/names/-/predicates/SameShoeSize2-x-takes-the-same-size-shoes-as-y/sentence/The relation which holds between people when one takes the same size shoes as the other is a reflexive relation.'
  '/ex/trans/domain/people/names/-/predicates/SameShoeSize2-x-takes-the-same-size-shoes-as-y/sentence/The relation which holds between people when one takes the same size shoes as the other is a symmetric relation.'
  '/ex/trans/domain/people/names/-/predicates/HappierThan2-x-is-happier-than-y/sentence/The relation which holds between people when one is happier than another is a transitive relation.'
  '/ex/trans/domain/people/names/-/predicates/HappierThan2-x-is-happier-than-y/sentence/The relation which holds between people when one is happier than another is a not a symmetric relation.'
  
  '/ex/create/qq/exists x exists y Adjacent(x,y)'
  '/ex/create/orValid/from/not false/to/all x all y all z ((Adjacent(x,y) and Adjacent(y,z)) arrow Adjacent(x,z))'
  '/ex/create/qq/exists x exists y Adjacent(x,y)|all x all y (Adjacent(x,y) arrow Adjacent(y,x))'
  '/ex/create/qq/exists x exists y Adjacent(x,y)|all x all y (Adjacent(x,y) arrow Adjacent(y,x))|not all x Adjacent(x,x)'
  '/ex/create/orValid/from/exists x exists y Adjacent(x,y)|all x all y (Adjacent(x,y) arrow Adjacent(y,x))/to/all x Adjacent(x,x)'
  '/ex/create/from/all x all y all z ((LeftOf(x,y) and LeftOf(y,z)) arrow LeftOf(x,z))|all x all y (LeftOf(x,y) arrow LeftOf(y,x))/to/all x LeftOf(x,x)'
  
]
exFast : [
  '/ex/trans/domain/people/names/-/predicates/SameShoeSize2-x-takes-the-same-size-shoes-as-y/sentence/The relation which holds between people when one takes the same size shoes as the other is a symmetric relation.'
  '/ex/trans/domain/people/names/-/predicates/LargerShoeSize2-x-has-a-larger-shoe-size-than-y/sentence/The relation which holds between people when one has a larger shoe size than the other is an irreflexive relation.'
  '/ex/trans/domain/people/names/-/predicates/HappierThan2-x-is-happier-than-y/sentence/The relation which holds between people when one is happier than another is a transitive relation.'
  '/ex/trans/domain/people/names/-/predicates/HappierThan2-x-is-happier-than-y/sentence/The relation which holds between people when one is happier than another is an asymmetric relation.'

  '/ex/create/orValid/from/not false/to/all x all y all z ((Adjacent(x,y) and Adjacent(y,z)) arrow Adjacent(x,z))'
  '/ex/create/orValid/from/all x all y all z ((LeftOf(x,y) and LeftOf(y,z)) arrow LeftOf(x,z))|all x all y (LeftOf(x,y) arrow LeftOf(y,x))/to/all x LeftOf(x,x)'
  
]
---



include ../../../fragments/unit_mixins

+slide({bkg:'unit_581/slide-187.jpeg'})
  .notes 
  .handout \begin{minipage}{\columnwidth}
  .handout A \emph{reflexive} relation is one that everything bears to itself.  (E.g. SameShape)  
  .handout reflexive: ∀x R(x,x)
  .handout.img(data-src='img/reflexive.png')
  .handout \end{minipage}
  
  .handout \begin{minipage}{\columnwidth}
  .handout A \emph{symmetric} relation is one such that if x bears it to y, then y bears it to x.  (E.g. Adjacent(x,y)) 
  .handout symmetric: ∀x∀y ( R(x,y) → R(y,x) )
  .handout.img(data-src='img/symmetric.png')
  .handout \end{minipage}

  .handout \begin{minipage}{\columnwidth}
  .handout A \emph{transitive} relation is one such that if x bears it to y and y bears it to z then x bears it to z.  (E.g. LeftOf is transitive; DifferentShape is not transitive) 	
  .handout transitive: ∀x∀y∀z ( ( R(x,y) ∧ R(y,z) ) → R(x,z) )
  .handout.img(data-src='img/transitive.png')
  .handout \end{minipage}



+slide({bkg:'unit_581/slide-188.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-189.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-190.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-191.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-192.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-193.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-194.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-195.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-196.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-197.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-198.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-199.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-200.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-201.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-202.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-203.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-204.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-205.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-206.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-207.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-208.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-209.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-210.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-211.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-212.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-213.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-214.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-215.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-216.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-217.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-218.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-219.jpeg'})
  .notes 

