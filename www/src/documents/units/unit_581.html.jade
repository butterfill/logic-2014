---cson
layout: 'deck_units'
title: "Expressing Relations with Quantifiers"
description: "Describes how quantifiers can be used to express the claim that a particular relation is reflexive, symmetric or transitive.  Also introduces dot-arrow diagrams to describe relations."
tags: ['quantification','relations']
depends: ['740','742']
source: ['ph126 fastlecture 05']
duration: 5
book: ['15.1']
exercises: ['15.29','15.30','15.31','15.32','15.33','15.34','15.35','15.36']
exercises_fast: ['15.29','15.33','15.34','15.35']
sequence: 760
---



include ../../../fragments/unit_mixins

+slide({bkg:'unit_581/slide-187.jpeg'})
  .notes 
  .handout \begin{minipage}{\columnwidth}
  .handout A \emph{reflexive} relation is one that everything bears to itself.  (E.g. SameShape)  
  .handout reflexive: ∀x R(x,x)
  .handout.img(data-src='img/reflexive.png')
  .handout \end{minipage}
  
  .handout \begin{minipage}{\columnwidth}
  .handout A \emph{symmetric} relation is one such that if x bears it to y, then y bears it to x.  (E.g. Adjacent(x,y)) 
  .handout symmetric: ∀x∀y ( R(x,y) → R(y,x) )
  .handout.img(data-src='img/symmetric.png')
  .handout \end{minipage}

  .handout \begin{minipage}{\columnwidth}
  .handout A \emph{transitive} relation is one such that if x bears it to y and y bears it to z then x bears it to z.  (E.g. LeftOf is transitive; DifferentShape is not transitive) 	
  .handout transitive: ∀x∀y∀z ( ( R(x,y) ∧ R(y,z) ) → R(x,z) )
  .handout.img(data-src='img/transitive.png')
  .handout \end{minipage}



+slide({bkg:'unit_581/slide-188.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-189.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-190.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-191.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-192.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-193.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-194.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-195.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-196.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-197.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-198.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-199.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-200.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-201.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-202.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-203.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-204.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-205.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-206.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-207.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-208.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-209.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-210.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-211.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-212.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-213.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-214.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-215.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-216.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-217.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-218.jpeg'})
  .notes 

+slide({bkg:'unit_581/slide-219.jpeg'})
  .notes 

