---cson
layout: 'deck_units' 
images: 'unit_504'
title: "All Squares Are Blue (Fast Version)"
description: "Looks at translating 'All squares and blue' and 'Some squares are blue' into awFOL using quantifiers."
tags: ['quantification']
depends: []
source: ['ph126 lecture 08', 'ph133 lecture 05', 'ph126 fastlecture 04', 'unit_504.pptx']
duration: 2
book: ['9.2','9.3','9.5']
exercises: []
exercises_fast: ['9.16.10--9.16.15','9.17.7--9.17.15']
exNormal: [
  '/ex/trans/domain/people/names/-/predicates/Red1|Happy1/sentence/exists x (Happy(x) and Red(x))'
  '/ex/create/qq/exists x (Happy(x) and Yellow(x))|exists x (Happy(x) and Red(x))'
  '/ex/create/qq/all x (Yellow(x) arrow Happy(x))'
  '/ex/trans/domain/people/names/-/predicates/Yellow1|Happy1/sentence/Something sad is yellow'
  '/ex/trans/domain/people/names/-/predicates/Blue1|Sad1/sentence/Everything blue is sad'
  
  """/ex/TorF/world/[{"x":3,"y":0,"w":2,"h":2,"n":"","c":"yellow","f":[":","-",")"]},{"x":5,"y":0,"w":2,"h":2,"n":"","c":"red","f":[":",">",")"]}]/qq/exists x (Happy(x) and Red(x))|all x (Happy(x) arrow Red(x))"""
  """/ex/TorF/world/[{"x":3,"y":0,"w":2,"h":2,"n":"","c":"yellow","f":[":","-",")"]},{"x":5,"y":0,"w":2,"h":2,"n":"","c":"blue","f":[":",">",")"]}]/qq/exists x (Happy(x) and Red(x))|all x (Happy(x) arrow Red(x))"""
  """/ex/TorF/world/[{"x":3,"y":0,"w":2,"h":2,"n":"","c":"yellow","f":[":","-","|"]},{"x":5,"y":0,"w":2,"h":2,"n":"","c":"blue","f":[":",">","("]}]/qq/exists x (Happy(x) and Red(x))|all x (Happy(x) arrow Red(x))"""
  """/ex/TorF/world/[{"x":3,"y":0,"w":2,"h":2,"n":"","c":"red","f":[":","-",")"]},{"x":5,"y":0,"w":2,"h":2,"n":"","c":"red","f":[":",">",")"]}]/qq/exists x (Happy(x) and Red(x))|all x (Happy(x) arrow Red(x))"""
  
  '/ex/trans/domain/people/names/-/predicates/Yellow1|Happy1/sentence/all x (Yellow(x) arrow Happy(x))'
  '/ex/create/qq/all x (Yellow(x) arrow Happy(x))|all x (Red(x) arrow Sad(x))'
  '/ex/create/qq/all x (Yellow(x) arrow Happy(x))|all x (Red(x) arrow Sad(x))|exists x (not Happy(x) and not Sad(x))'
  '/ex/trans/domain/people/names/-/predicates/Sad1|Happy1/sentence/Someone is neither happy nor sad'
]
exFast: [
  '/ex/trans/domain/people/names/-/predicates/Red1|Happy1/sentence/exists x (Happy(x) and Red(x))'
  '/ex/create/qq/exists x (Happy(x) and Yellow(x))|exists x (Happy(x) and Red(x))'
  '/ex/trans/domain/people/names/-/predicates/Yellow1|Happy1/sentence/Something sad is yellow'
  '/ex/trans/domain/people/names/-/predicates/Blue1|Sad1/sentence/Everything blue is sad'
  
  """/ex/TorF/world/[{"x":3,"y":0,"w":2,"h":2,"n":"","c":"yellow","f":[":","-",")"]},{"x":5,"y":0,"w":2,"h":2,"n":"","c":"blue","f":[":",">",")"]}]/qq/exists x (Happy(x) and Red(x))|all x (Happy(x) arrow Red(x))"""
  """/ex/TorF/world/[{"x":3,"y":0,"w":2,"h":2,"n":"","c":"yellow","f":[":","-","|"]},{"x":5,"y":0,"w":2,"h":2,"n":"","c":"blue","f":[":",">","("]}]/qq/exists x (Happy(x) and Red(x))|all x (Happy(x) arrow Red(x))"""
  
  '/ex/trans/domain/people/names/-/predicates/Yellow1|Happy1/sentence/all x (Yellow(x) arrow Happy(x))'
  '/ex/create/qq/all x (Yellow(x) arrow Happy(x))|all x (Red(x) arrow Sad(x))'
  '/ex/create/qq/all x (Yellow(x) arrow Happy(x))|all x (Red(x) arrow Sad(x))|exists x (not Happy(x) and not Sad(x))'
  '/ex/trans/domain/people/names/-/predicates/Sad1|Happy1/sentence/Someone is neither happy nor sad'
]
---



include ../../../fragments/unit_mixins

+slide({bkg:'unit_504/slide-000.jpeg'})
  .notes 
  //- handout
  .handout \begin{minipage}{\columnwidth}
  .handout \emph{∃ and ∧ work together}
  .handout Some square is blue: 
  .handout ∃x ( Square(x) ∧ Blue(x) )
  .handout Some of my things are broken: 
  .handout ∃x ( Belongs(a,x) ∧ Broken(x) )
  .handout \end{minipage}
  .handout \begin{minipage}{\columnwidth}
  .handout \emph{∀ and → work together}
  .handout All squares are blue:
  .handout ∀x ( Square(x) →  Blue(x) )
  .handout All my things are broken: 
  .handout ∀x ( Belongs(a,x) →  Broken(x) )
  .handout \end{minipage}
  

+slide({bkg:'unit_504/slide-001.jpeg'})
  .notes 

+slide({bkg:'unit_504/slide-002.jpeg'})
  .notes 

+slide({bkg:'unit_504/slide-003.jpeg'})
  .notes 

+slide({bkg:'unit_504/slide-004.jpeg'})
  .notes 

+slide({bkg:'unit_504/slide-005.jpeg'})
  .notes 

+slide({bkg:'unit_504/slide-006.jpeg'})
  .notes 

+slide({bkg:'unit_504/slide-007.jpeg'})
  .notes 

+slide({bkg:'unit_504/slide-008.jpeg'})
  .notes 

+slide({bkg:'unit_504/slide-009.jpeg'})
  .notes 

+slide({bkg:'unit_504/slide-010.jpeg'})
  .notes 

+slide({bkg:'unit_504/slide-011.jpeg'})
  .notes 

+slide({bkg:'unit_504/slide-012.jpeg'})
  .notes 

+slide({bkg:'unit_504/slide-013.jpeg'})
  .notes 

+slide({bkg:'unit_504/slide-014.jpeg'})
  .notes 

+slide({bkg:'unit_504/slide-015.jpeg'})
  .notes 

+slide({bkg:'unit_504/slide-016.jpeg'})
  .notes 

+slide({bkg:'unit_504/slide-017.jpeg'})
  .notes 

