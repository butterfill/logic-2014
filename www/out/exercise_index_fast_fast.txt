{
  "courseName": "UK_W20_PH126",
  "variant": "fast-fast",
  "description": "These exercises are aimed at students with a qualification equivalent to further maths at A-Level. They are linked to the ‘fast’ lectures.",
  "lectures": [
    {
      "type": "lecture",
      "name": "Fast Lecture 01",
      "slides": "http://logic-1.butterfill.com/fastlecture_01.html",
      "handout": "http://logic-1.butterfill.com/handouts/fastlecture_01.handout.pdf",
      "units": [
        {
          "type": "unit",
          "name": "Terminology",
          "slides": "http://logic-1.butterfill.com/units/unit_029.html",
          "rawReading": [],
          "rawExercises": [
            "/ex/q/define ‘logically valid argument’",
            "/ex/TorF/qq/in the sentence ‘John is square or Ayesha is triangular’, the word ‘John’ is a name|in the same sentence, ‘square’ is a predicate|in the same sentence, ‘square’ is a connective|in the same sentence, ‘or’ is a predicate|in the same sentence, ‘or’ is a connective"
          ]
        },
        {
          "type": "unit",
          "name": "Logically Valid Arguments",
          "slides": "http://logic-1.butterfill.com/units/unit_03.html",
          "rawReading": [
            "2.1"
          ],
          "rawExercises": [
            "/ex/TorF/from/Ayesha is a fish|Beatrice is not a fish/to/Ayesha isn’t Beatrice/qq/The argument is logically valid",
            "/ex/TorF/from/Most fish swim|Ayesha is a fish/to/Ayesha swims/qq/The argument is logically valid",
            "/ex/TorF/from/If Beatrice is a fish, she can swim|Beatrice is a fish/to/Beatrice can swim/qq/The argument is logically valid",
            "/ex/TorF/from/If Ayesha is a bird, she can fly|Ayesha can fly/to/Ayesha is a bird/qq/The argument is logically valid",
            "/ex/TorF/from/Ayesha can fly|Beatrice can swim/to/Ayesha isn’t Beatrice/qq/The argument is logically valid",
            "/ex/TorF/from/Ayesha is a big squirrel|All squirrels are animals/to/Ayesha is a big animal/qq/The argument is logically valid",
            "/ex/TorF/qq/a logically valid argument can have true premises and a true conclusion|a logically valid argument can have true premises and a false conclusion|a logically valid argument can have false premises and a true conclusion|a logically valid argument can have false premises and a false conclusion"
          ]
        },
        {
          "type": "unit",
          "name": "Counterexamples",
          "slides": "http://logic-1.butterfill.com/units/unit_04.html",
          "rawReading": [
            "2.5"
          ],
          "rawExercises": [
            "/ex/create/from/TallerThan(a,b)/to/WiderThan(a,b)",
            "/ex/create/from/Adjacent(a,b)|Adjacent(b,c)/to/Adjacent(a,c)",
            "/ex/create/from/SameShape(a,b)/to/SameSize(a,b)",
            "/ex/create/from/SameSize(a,b)/to/SameShape(a,b)",
            "/ex/TorF/from/Happy(a) or Happy(b)|Happy(a)/to/not Happy(b)/world/[{\"x\":9,\"y\":0,\"w\":2,\"h\":2,\"n\":\"a\",\"c\":\"white\",\"f\":[\"}:\",\"^\",\"D\"]},{\"x\":0,\"y\":0,\"w\":2,\"h\":2,\"n\":\"b\",\"c\":\"pink\",\"f\":[\":'\",\"-\",\"D\"]},{\"x\":4,\"y\":0,\"w\":2,\"h\":2,\"n\":\"\",\"c\":\"purple\",\"f\":[\":'\",\"-\",\"(\"]}]/qq/Happy(a) or Happy(b)|Happy(a)|not Happy(b)|The possible situation is a counterexample to the argument",
            "/ex/TorF/from/Happy(a)/to/not Happy(b)/world/[{\"x\":3,\"y\":0,\"w\":3,\"h\":3,\"n\":\"a\",\"c\":\"white\",\"f\":[\":\",\"-\",\")\"]},{\"x\":7,\"y\":0,\"w\":2,\"h\":2,\"n\":\"b\",\"c\":\"red\",\"f\":[\":'\",\">\",\"(\"]}]/qq/Happy(a)|not Happy(b)|The possible situation is a counterexample to the argument",
            "/ex/TorF/from/LargerThan(a,b)/to/not SameShape(a,b)/world/[{\"x\":3,\"y\":0,\"w\":3,\"h\":3,\"n\":\"a\",\"c\":\"white\",\"f\":[\":\",\"-\",\")\"]},{\"x\":7,\"y\":0,\"w\":2,\"h\":2,\"n\":\"b\",\"c\":\"red\",\"f\":[\":'\",\">\",\"(\"]}]/qq/LargerThan(a,b)|not SameShape(a,b)|The possible situation is a counterexample to the argument",
            "/ex/q/define ‘counterexample’",
            "/ex/create/from/LeftOf(a,b)|RightOf(b,c)/to/LeftOf(a,c)",
            "/ex/create/from/LeftOf(a,b)|Adjacent(b,c)/to/LeftOf(a,c)",
            "/ex/create/orValid/from/LeftOf(a,b)|LeftOf(b,c)/to/LeftOf(a,c)",
            "/ex/create/orValid/from/SameSize(a,b)|SameShape(b,c)/to/SameSize(a,c)",
            "/ex/create/orValid/from/not LeftOf(a,b)|not LeftOf(b,a)/to/a=b"
          ]
        }
      ]
    },
    {
      "type": "lecture",
      "name": "Fast Lecture 02",
      "slides": "http://logic-1.butterfill.com/fastlecture_02.html",
      "handout": "http://logic-1.butterfill.com/handouts/fastlecture_02.handout.pdf",
      "units": []
    },
    {
      "type": "lecture",
      "name": "Fast Lecture 03",
      "slides": "http://logic-1.butterfill.com/fastlecture_03.html",
      "handout": "http://logic-1.butterfill.com/handouts/fastlecture_03.handout.pdf",
      "units": []
    },
    {
      "type": "lecture",
      "name": "Fast Lecture 04",
      "slides": "http://logic-1.butterfill.com/fastlecture_04.html",
      "handout": "http://logic-1.butterfill.com/handouts/fastlecture_04.handout.pdf",
      "units": []
    },
    {
      "type": "lecture",
      "name": "Fast Lecture 05",
      "slides": "http://logic-1.butterfill.com/fastlecture_05.html",
      "handout": "http://logic-1.butterfill.com/handouts/fastlecture_05.handout.pdf",
      "units": []
    },
    {
      "type": "lecture",
      "name": "Fast Lecture 06",
      "slides": "http://logic-1.butterfill.com/fastlecture_06.html",
      "handout": "http://logic-1.butterfill.com/handouts/fastlecture_06.handout.pdf",
      "units": [
        {
          "type": "unit",
          "name": "There Does Not Exist",
          "slides": "http://logic-1.butterfill.com/units/unit_605.html",
          "rawReading": [],
          "rawExercises": [
            "/ex/trans/domain/people/names/-/predicates/Happy1|Crying1/sentence/Someone is happy and crying",
            "/ex/trans/domain/people/names/-/predicates/Happy1|Crying1/sentence/Someone is neither happy nor crying",
            "/ex/trans/domain/people/names/-/predicates/Happy1/sentence/Someone is not happy",
            "/ex/trans/domain/people/names/-/predicates/Happy1/sentence/No one is happy",
            "/ex/trans/domain/things/names/-/predicates/Broken1/sentence/Everything is not broken",
            "/ex/trans/domain/things/names/-/predicates/Broken1/sentence/Not everything is broken",
            "/ex/trans/domain/things/names/-/predicates/Broken1|Red1/sentence/Not everything red is broken",
            "/ex/trans/domain/things/names/-/predicates/Broken1|Red1/sentence/Everything red is not broken",
            "/ex/proof/orInvalid/from/not exists x Dead(x)/to/exists x not Dead(x)",
            "/ex/proof/orInvalid/from/exists x not Dead(x)/to/not exists x Dead(x)",
            "/ex/create/orValid/from/not exists x Happy(x)/to/exists x not Happy(x)",
            "/ex/create/orValid/from/exists x not Happy(x)/to/not exists x Happy(x)"
          ]
        },
        {
          "type": "unit",
          "name": "↔ : truth tables and rules",
          "slides": "http://logic-1.butterfill.com/units/unit_567.html",
          "rawReading": [],
          "rawExercises": [
            "/ex/tt/qq/(A arrow B) ↔ not (A and not B)",
            "/ex/proof/from/A arrow B|B arrow A/to/A ↔ B",
            "/ex/proof/from/(not A or B) and (A or not B)/to/A ↔ B"
          ]
        }
      ]
    },
    {
      "type": "lecture",
      "name": "Fast Lecture 07",
      "slides": "http://logic-1.butterfill.com/fastlecture_07.html",
      "handout": "http://logic-1.butterfill.com/handouts/fastlecture_07.handout.pdf",
      "units": []
    }
  ]
}
